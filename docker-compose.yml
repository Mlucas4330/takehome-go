services:
    db:
        image: postgres:16
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASS}
            POSTGRES_DB: ${DB_NAME}
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
            interval: 5s
            timeout: 3s
            retries: 10
        volumes:
            - dbdata:/var/lib/postgresql/data

    flyway:
        image: flyway/flyway:10
        depends_on:
            db:
                condition: service_healthy
        environment:
            FLYWAY_URL: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
            FLYWAY_USER: ${DB_USER}
            FLYWAY_PASSWORD: ${DB_PASS}
            FLYWAY_SCHEMAS: public
            FLYWAY_LOCATIONS: filesystem:/flyway/sql
        command: -connectRetries=60 migrate
        volumes:
            - ./docker/flyway/migrations:/flyway/sql

    api:
        build:
            context: .
            dockerfile: docker/Dockerfile
        env_file:
            - .env
        depends_on:
            flyway:
                condition: service_completed_successfully
        ports:
            - '8080:8080'
        command: air
        working_dir: /app
        environment:
            - CGO_ENABLED=0
            - GOOS=linux
            - GOARCH=amd64

volumes:
    dbdata:
